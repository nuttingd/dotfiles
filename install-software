#!/usr/bin/env -S bash -l
script_dir=`dirname $0`
source $script_dir/home/.functions

function usage {
  CLEAR='\033[0m'
  RED='\033[0;31m'
  if [ -n "$1" ]; then
    echo -e "${RED}ðŸ‘‰ $1${CLEAR}\n";
  fi
  echo "Usage: $0 [--verbose]"
  echo "  -v, --verbose            Use verbose output"
  echo "  -q, --quiet              Quiet mode, bypass (most) prompts"
  echo ""
  echo "Example: $0 --verbose"
  exit 1
}

function parse_args {
  while [[ "$#" > 0 ]]; do case $1 in
    -v|--verbose) VERBOSE=1;shift;;
    -q|--quiet) QUIET_MODE=1;shift;;
    *) usage "Unknown parameter passed: $1"; shift; shift;;
  esac; done
}

parse_args $@

if ! has_command brew; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  echo Installed brew. Please re-source your shell and run this again.
  exit 1
fi

if has_command brew && prompt_continue -y "Do you want to install packages with Homebrew?"; then
  echo "Running brew update"
  brew update
  echo "Upgrading any previously installed homebrew packages"
  brew upgrade
  echo "Installing new packages"
  brew bundle

  # install fzf key bindings and completions, without touching .zshrc
  $(brew --prefix)/opt/fzf/install --key-bindings --completion --no-update-rc
fi

if has_os osx && prompt_continue -y "Do you want to install iTerm2 shell integration tools?"; then
  curl -L https://iterm2.com/shell_integration/install_shell_integration_and_utilities.sh | bash
fi

if prompt_continue -y 'Do you want to install Python tools?'; then
  echo "Installing python tools"
  python3 -m pip install flake8
  python3 -m pip install black
  python3 -m pip install jedi
  python3 -m pip install pylint
  python3 -m pip install rope
fi

if prompt_continue -y 'Do you want to install Kubernetes tools?'; then
  echo "Installing helm-secrets"
  helm plugin install https://github.com/jkroepke/helm-secrets --version v3.10.0
fi

if prompt_continue -y 'Do you want to install (neo)vim tools?'; then
  echo "Installing vim tools"
  # vim-plug
  curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim \
    --create-dirs 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  python3 -m pip install neovim
  npm install -g neovim
  npm install -g yarn # needed by VIM tools
fi

if prompt_continue -y 'Do you want to install SDKMAN?'; then
  if has_command sdk; then
    echo "SDKMAN! is installed. Updating."
    sdk selfupdate force
  else
    echo "Installing SDKMAN!"
    curl -s "https://get.sdkman.io" | bash
  fi
fi

if prompt_continue -y 'Do you want to install oh-my-zsh?'; then
  echo "Installing oh-my-zsh"
  RUNZSH=no KEEP_ZSHRC=yes CHSH=no bash -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

  echo "Installing oh-my-zsh plugins"
  git clone --depth=1 git@github.com:romkatv/powerlevel10k.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/powerlevel10k
  git clone --depth=1 git@github.com:zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
  git clone --depth=1 git@github.com:zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
  git clone --depth=1 git@github.com:gradle/gradle-completion.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/gradle-completion
  git clone --depth=1 git@github.com:softmoth/zsh-vim-mode.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-vim-mode
  git clone --depth=1 git@github.com:jsahlen/tmux-vim-integration.plugin.zsh.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/tmux-vim-integration
fi
